{"version":3,"sources":["AudioVisualizer/AudioVisualizer.js","App.js","reportWebVitals.js","index.js"],"names":["AudioVisualizer","audioRef","useRef","document","querySelector","className","href","target","id","height","width","audioId","capColor","capHeight","meterWidth","meterCount","meterColor","stop","color","gap","ref","controls","type","onChange","e","files","current","src","URL","createObjectURL","load","handleFiles","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"sOA8DeA,G,MAzDS,WACpB,IAAMC,EAAWC,iBAAOC,SAASC,cAAc,WAQ/C,OACI,sBAAKC,UAAU,YAAf,UACI,kDACA,0DACA,yDAC6B,IACzB,mBACIC,KAAK,qDACLC,OAAO,SAFX,kCAKK,IAPT,YAWA,sBAAKF,UAAU,SAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,cAAC,IAAD,CACIG,GAAG,eACHC,OAAQ,IACRC,MAAO,IACPC,QAAS,gBACTC,SAAU,UACVC,UAAW,EACXC,WAAY,EACZC,WAAY,IACZC,WAAY,CACR,CAAEC,KAAM,EAAGC,MAAO,QAClB,CAAED,KAAM,GAAKC,MAAO,WACpB,CAAED,KAAM,EAAGC,MAAO,YAEtBC,IAAK,MAGb,sBAAKd,UAAU,YAAf,UACI,uBACIe,IAAKnB,EACLoB,UAAQ,EACRhB,UAAU,QACVG,GAAG,kBAEP,uBAAOc,KAAK,OAAOC,SAAU,SAACC,GAAD,OA/CzB,SAACA,GACjB,IAAIC,EAAQD,EAAEjB,OAAOkB,MACrBxB,EAASyB,QAAQC,IAAMC,IAAIC,gBAAgBJ,EAAM,IACjDxB,EAASyB,QAAQI,OA4C+BC,CAAYP,iBC7CrDQ,MARf,WACI,OACI,8BACI,cAAC,EAAD,OCOGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJzC,SAAS0C,eAAe,SAM5BZ,M","file":"static/js/main.f8827bf5.chunk.js","sourcesContent":["import React, { useRef } from 'react';\r\nimport AudioSpectrum from 'react-audio-spectrum';\r\n\r\nimport './AudioVisualizer.scss';\r\n\r\nconst AudioVisualizer = () => {\r\n    const audioRef = useRef(document.querySelector('.audio'));\r\n\r\n    const handleFiles = (e) => {\r\n        let files = e.target.files;\r\n        audioRef.current.src = URL.createObjectURL(files[0]);\r\n        audioRef.current.load();\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Audio Visualizer</h1>\r\n            <p>JavaScript, HTML and CSS.</p>\r\n            <p>\r\n                The application uses the{' '}\r\n                <a\r\n                    href=\"https://www.npmjs.com/package/react-audio-spectrum\"\r\n                    target=\"_blank\"\r\n                >\r\n                    React Audio Spectrum\r\n                </a>{' '}\r\n                module\r\n            </p>\r\n\r\n            <div className=\"player\">\r\n                <div className=\"analyser-wrap\">\r\n                    <AudioSpectrum\r\n                        id=\"audio-canvas\"\r\n                        height={100}\r\n                        width={500}\r\n                        audioId={'audio-element'}\r\n                        capColor={'#007cc3'}\r\n                        capHeight={2}\r\n                        meterWidth={4}\r\n                        meterCount={512}\r\n                        meterColor={[\r\n                            { stop: 0, color: '#000' },\r\n                            { stop: 0.5, color: '#003452' },\r\n                            { stop: 1, color: '#003452' },\r\n                        ]}\r\n                        gap={2}\r\n                    />\r\n                </div>\r\n                <div className=\"audio-box\">\r\n                    <audio\r\n                        ref={audioRef}\r\n                        controls\r\n                        className=\"audio\"\r\n                        id=\"audio-element\"\r\n                    ></audio>\r\n                    <input type=\"file\" onChange={(e) => handleFiles(e)} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AudioVisualizer;\r\n","import AudioVisualizer from './AudioVisualizer/AudioVisualizer';\n\nfunction App() {\n    return (\n        <div>\n            <AudioVisualizer />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}